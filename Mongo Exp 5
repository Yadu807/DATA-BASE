             EXP5 : AGGREGATE FUNCTIONS AND REGULAR EXPRESSIONS
             
1.


Invoice> db.Customer.find().sort({name:1})
[
  {
    '0': {
      id: 1006,
      name: 'Magiure',
      address: 'gjhg',
      city: 'Calicut',
      age: 34
    },
    _id: ObjectId('661caaf02b495a5f9bef634b')
  },
  {
    '0': {
      id: 1007,
      name: 'Ten Hag',
      address: 'gerf',
      city: 'Calicut',
      age: 64
    },
    _id: ObjectId('661cab112b495a5f9bef634c')
  },
  {
    '0': {
      id: 1007,
      name: 'Ten Hag',
      address: 'gerf',
      city: 'Calicut',
      age: 64
    },
    _id: ObjectId('661cac942b495a5f9bef634d')
  },
  {
    _id: ObjectId('6613726a79fef93cf1ef634d'),
    id: 1003,
    name: 'Bruno',
    address: 'asdf',
    city: 'Ekm'
  },
  {
    _id: ObjectId('6613726a79fef93cf1ef634f'),
    id: 1005,
    name: 'Casemiro',
    address: 'pouy',
    city: 'Thiru'
  },
  {
    _id: ObjectId('6613726a79fef93cf1ef634c'),
    id: 1002,
    name: 'Granachoo',
    address: 'qwer',
    city: 'Calicut'
  },
  {
    _id: ObjectId('6613726a79fef93cf1ef634e'),
    id: 1004,
    name: 'Onana',
    address: 'zxcv',
    city: 'Ekm'
  }
]


2.


Invoice> db.Customer.aggregate([{$group:{_id: "$city",count :{$sum :1}}}])
[
  { _id: 'Calicut', count: 1 },
  { _id: 'Ekm', count: 2 },
  { _id: 'Thiru', count: 1 },
  { _id: null, count: 3 }
]



3.


Invoice> db.Customer.aggregate([{$group:{_id: "$city",max:{$max:"$age"},min:{$min:"$age"}}}])
[
  { _id: 'Calicut', max: null, min: null },
  { _id: 'Ekm', max: null, min: null },
  { _id: 'Thiru', max: null, min: null },
  { _id: null, max: null, min: null }
]
 
